#BlueJ class context
comment0.target=GestorPedidos
comment0.text=\r\n\ Clase\ que\ almacena\ y\ gestiona\ todos\ los\ pedidos\ realizados\ a\ la\ f\u00E1brica.\ \r\n\ Tambi\u00E9n\ las\ diferentes\ listas\ y\ b\u00FAsquedas\ sobre\ los\ pedidos.\r\n\ \r\n\ @author\ Germ\u00E1n\ Rodr\u00EDguez\ D\u00EDez\r\n\ @version\ 0.1\r\n
comment1.params=gM\ gC\ gE
comment1.target=GestorPedidos(GestorMuebles,\ GestorClientes,\ GestorEmpleados)
comment1.text=\r\n\ Construye\ un\ gestor\ de\ pedidos\ con\ los\ tres\ atributos\ asignados,\ la\ lista\ de\ pedidos\ vac\u00EDa\ y\ el\ contador\ de\ pedidos\ a\ 0\r\n
comment10.params=p
comment10.target=void\ estadoPedidoEnCurso(Pedido)
comment10.text=\r\n\ Imprime\ el\ estado\ del\ pedido\ en\ curso,\ pasado\ por\ par\u00E1metro\r\n\ @param\ \ \ \ \ p\ pedido\ del\ cual\ leer\ el\ estado\r\n
comment11.params=
comment11.target=void\ llenarMueblesCliente()
comment11.text=\r\n\ Llena\ la\ lista\ de\ muebles\ del\ cliente\ (en\ gestorMuebles),\ enviando\ todos\ los\ muebles\ de\ todos\ los\ pedidos\ del\ cliente\ conectado\r\n
comment12.params=
comment12.target=java.util.ArrayList\ pedidosCliente()
comment12.text=\r\n\ Devuelve\ una\ lista\ de\ los\ pedidos\ del\ cliente\ conectado\r\n\ @return\ ArrayList\ de\ pedidos\ sin\ asignar\r\n
comment13.params=
comment13.target=int\ getNumeroPedidosCliente()
comment13.text=\r\n\ Devuelve\ el\ n\u00FAmero\ de\ pedidos\ del\ cliente\ conectado\r\n\ @return\ int\ de\ pedidos\ del\ cliente\ conectado\r\n
comment14.params=
comment14.target=void\ listarPedidosCliente()
comment14.text=\r\n\ Muestra\ la\ lista\ de\ pedidos\ del\ cliente\ conectado\ para\ informar,\ no\ como\ opciones\ (al\ conocerse\ el\ cliente,\ no\ se\ muestran\ los\ datos\ del\ cliente\ en\ cada\ pedido)\r\n
comment15.params=
comment15.target=java.util.ArrayList\ pedidosPorConfirmarCliente()
comment15.text=\r\n\ Devuelve\ una\ lista\ de\ los\ pedidos\ por\ confirmar\ (en\ estado\ PENDIENTE_DE_CONFIRMACION)\ del\ cliente\ conectado\r\n\ @return\ ArrayList\ de\ pedidos\ por\ confirmar\ del\ cliente\ conectado\r\n
comment16.params=
comment16.target=int\ getNumeroPedidosPorConfirmarCliente()
comment16.text=\r\n\ Devuelve\ el\ n\u00FAmero\ de\ pedidos\ por\ confirmar\ (en\ estado\ PENDIENTE_DE_CONFIRMACION)\ del\ cliente\ conectado\r\n\ @return\ int\ con\ el\ n\u00FAmero\ de\ pedidos\ por\ confirmar\ del\ cliente\ conectado\r\n
comment17.params=
comment17.target=void\ listarPedidosPorConfirmarCliente()
comment17.text=\r\n\ Muestra\ la\ lista\ de\ pedidos\ del\ cliente\ conectado\ y\ por\ confirmar\ (en\ estado\ PENDIENTE_DE_CONFIRMACION),\ como\ opciones\ para\ elegir\ \r\n\ (al\ conocerse\ el\ cliente,\ no\ se\ muestran\ los\ datos\ del\ cliente\ en\ cada\ pedido)\r\n
comment18.params=indice
comment18.target=void\ confirmarPedidoCliente(int)
comment18.text=\r\n\ Confirma\ el\ pedido\ anteriormente\ elegido\ con\ el\ indice,\ de\ la\ lista\ de\ pedidos\ por\ confirmar\ del\ cliente\ conectado\r\n\ @param\ indice\ indice\ del\ pedido\ elegido\ en\ la\ lista\ mencionada\ anteriormente\r\n
comment19.params=
comment19.target=java.util.ArrayList\ pedidosPorEnviar()
comment19.text=\r\n\ Devuelve\ una\ lista\ de\ los\ pedidos\ por\ enviar\ (en\ estado\ PENDIENTE_DE_ENVIO)\ de\ la\ lista\ de\ pedidos\ de\ la\ f\u00E1brica\r\n\ @return\ ArrayList\ de\ pedidos\ por\ enviar\r\n
comment2.params=gM
comment2.target=void\ setGestorMuebles(GestorMuebles)
comment2.text=\r\n\ Establece\ el\ atributo\ gestorMuebles\ con\ el\ enviado\ por\ par\u00E1metro\r\n\ @param\ \ \ \ \ gM\ gestor\ muebles\ nuevo\r\n
comment20.params=
comment20.target=int\ getNumeroPedidosPorEnviar()
comment20.text=\r\n\ Devuelve\ el\ n\u00FAmero\ de\ pedidos\ por\ enviar\ (en\ estado\ PENDIENTE_DE_ENVIO)\ de\ la\ lista\ de\ pedidos\ de\ la\ f\u00E1brica\r\n\ @return\ int\ con\ el\ n\u00FAmero\ de\ pedidos\ por\ enviar\ \r\n
comment21.params=
comment21.target=void\ listarPedidosPorEnviar()
comment21.text=\r\n\ Muestra\ la\ lista\ de\ pedidos\ por\ enviar\ (en\ estado\ PENDIENTE_DE_ENVIO),\ como\ opciones\ para\ elegir\ \r\n\ (al\ no\ conocerse\ el\ cliente,\ s\u00ED\ se\ muestran\ los\ datos\ del\ cliente\ en\ cada\ pedido)\r\n
comment22.params=indice
comment22.target=void\ enviarPedido(int)
comment22.text=\r\n\ Env\u00EDa\ el\ pedido\ anteriormente\ elegido\ con\ el\ indice,\ de\ la\ lista\ de\ pedidos\ por\ enviar\r\n\ @param\ indice\ indice\ del\ pedido\ elegido\ en\ la\ lista\ mencionada\ anteriormente\r\n
comment23.params=
comment23.target=java.util.ArrayList\ pedidosEnProceso()
comment23.text=\r\n\ Devuelve\ una\ lista\ de\ los\ pedidos\ en\ proceso\ (en\ estado\ EN_PROCESO)\ de\ la\ lista\ de\ pedidos\ de\ la\ f\u00E1brica\r\n\ @return\ ArrayList\ de\ pedidos\ en\ proceso\r\n
comment24.params=
comment24.target=int\ getNumeroPedidosEnProceso()
comment24.text=\r\n\ Devuelve\ el\ n\u00FAmero\ de\ pedidos\ en\ proceso\ (en\ estado\ EN_PROCESO)\ de\ la\ lista\ de\ pedidos\ de\ la\ f\u00E1brica\r\n\ @return\ int\ con\ el\ n\u00FAmero\ de\ pedidos\ en\ proceso\r\n
comment25.params=
comment25.target=void\ listarPedidosEnProceso()
comment25.text=\r\n\ Muestra\ la\ lista\ de\ pedidos\ en\ proceso\ (en\ estado\ EN_PROCESO)\ para\ informar,\ no\ como\ opciones\r\n\ (al\ no\ conocerse\ el\ cliente,\ s\u00ED\ se\ muestran\ los\ datos\ del\ cliente\ en\ cada\ pedido)\r\n
comment26.params=
comment26.target=java.util.ArrayList\ pedidosArtesano()
comment26.text=\r\n\ Devuelve\ una\ lista\ de\ los\ pedidos\ del\ artesano\ conectado\r\n\ @return\ ArrayList\ de\ pedidos\ del\ artesano\r\n
comment27.params=sonOpciones
comment27.target=void\ listarPedidosArtesano(boolean)
comment27.text=\r\n\ Muestra\ la\ lista\ de\ pedidos\ del\ artesano\r\n\ (al\ no\ conocerse\ el\ cliente,\ s\u00ED\ se\ muestran\ los\ datos\ del\ cliente\ en\ cada\ pedido)\r\n\ @param\ sonOpciones\ si\ es\ true,\ se\ mostrar\u00E1\ como\ opciones\ para\ ser\ elegido\ por\ teclado,\ si\ es\ false\ se\ mostrar\u00E1\ solo\ para\ informar\r\n
comment28.params=indice
comment28.target=void\ establecerPedidoEnCursoArtesano(int)
comment28.text=\r\n\ Establece\ como\ pedido\ en\ curso\ del\ artesano\ conectado,\ el\ pedido\ que\ tiene\ el\ \u00EDndice\ pasado\ como\ par\u00E1metro,\ elegido\ en\ la\ lista\ de\ pedidos\ del\ artesano\ conectado\r\n\ @param\ indice\ indice\ del\ pedido\ elegido\ en\ la\ lista\ mencionada\ anteriormente\r\n
comment29.params=
comment29.target=java.util.ArrayList\ pedidosSinAsignar()
comment29.text=\r\n\ Devuelve\ una\ lista\ de\ los\ pedidos\ sin\ asignar\ a\ ning\u00FAn\ artesano\r\n\ @return\ ArrayList\ de\ pedidos\ sin\ asignar\r\n
comment3.params=gC
comment3.target=void\ setGestorClientes(GestorClientes)
comment3.text=\r\n\ Establece\ el\ atributo\ gestorClientes\ con\ el\ enviado\ por\ par\u00E1metro\r\n\ @param\ \ \ \ \ gC\ gestor\ clientes\ nuevo\r\n
comment30.params=
comment30.target=int\ getNumeroPedidosSinAsignar()
comment30.text=\r\n\ Devuelve\ el\ n\u00FAmero\ de\ pedidos\ sin\ asignar\ de\ la\ lista\ de\ pedidos\ de\ la\ f\u00E1brica\r\n\ @return\ int\ con\ el\ n\u00FAmero\ de\ pedidos\ sin\ asignar\r\n
comment31.params=
comment31.target=void\ listarPedidosSinAsignar()
comment31.text=\r\n\ Muestra\ la\ lista\ de\ pedidos\ sin\ asignar\ como\ opciones\r\n\ (al\ no\ conocerse\ el\ cliente,\ s\u00ED\ se\ muestran\ los\ datos\ del\ cliente\ en\ cada\ pedido)\r\n
comment32.params=indicePedido\ indiceArtesano
comment32.target=void\ asignarPedidoArtesano(int,\ int)
comment32.text=\r\n\ Asigna\ el\ pedido\ sin\ asignar,\ con\ indice\ del\ primer\ par\u00E1metro\ (extra\u00EDdo\ de\ la\ lista\ de\ pedidos\ sin\ asignar)\ \r\n\ al\ artesano\ elegido\ con\ \u00EDndice\ en\ el\ segundo\ par\u00E1metro,\ elegido\ de\ la\ lista\ de\ artesanos\ en\ la\ f\u00E1brica\r\n\ @param\ indicePedido\ \u00EDndice\ del\ pedido\ sin\ asignar\ elegido\ en\ la\ lista\ de\ pedidos\ sin\ asignar\r\n\ @param\ indiceArtesano\ \u00EDndice\ del\ artesano\ elegido\ en\ la\ lista\ de\ artesanos\ de\ la\ f\u00E1brica\r\n
comment33.params=pedidos\ estado
comment33.target=java.util.ArrayList\ listaPedidosEstado(java.util.ArrayList,\ EstadoPedido)
comment33.text=\r\n\ Devuelve\ una\ lista\ de\ pedidos\ donde,\ de\ la\ lista\ de\ pedidos\ del\ primer\ par\u00E1metro,\ ha\ a\u00F1adido\ solo\ los\ del\ estado\ pasado\ por\ segundo\ par\u00E1metro\ \r\n\ @param\ \ \ pedidos\ lista\ de\ pedidos\ donde\ realizar\ la\ b\u00FAsqueda\r\n\ @param\ \ \ estado\ estado\ en\ el\ que\ est\u00E1n\ los\ pedidos\ de\ la\ lista\ a\ devolver\r\n\ @return\ ArrayList\ de\ pedidos\ en\ el\ estado\ del\ segundo\ par\u00E1metro,\ sacados\ de\ la\ lista\ del\ primer\ par\u00E1metro\r\n
comment34.params=pedidos\ sonOpciones\ mostrarCliente
comment34.target=void\ mostrarListaPedidos(java.util.ArrayList,\ boolean,\ boolean)
comment34.text=\r\n\ Imprime\ una\ lista\ de\ pedidos\ pasada\ por\ el\ primer\ par\u00E1metro\r\n\ @param\ \ \ pedidos\ lista\ de\ pedidos\ a\ imprimir\r\n\ @param\ \ \ sonOpciones\ si\ es\ true,\ se\ imprimir\u00E1\ empezando\ por\ 0\ hasta\ el\ \u00FAltimo\ n\u00FAmero\ y\ con\ ")",\ \r\n\ para\ mostrar\ que\ son\ opciones,\ si\ es\ false\ ser\u00E1\ solo\ para\ visualizar,\ y\ empezar\u00E1\ por\ el\ 1\ hasta\ el\ \u00FAltimo\ n\u00FAmero,\ y\ con\ "-"\r\n\ @param\ \ \ mostrarCliente\ si\ es\ true,\ se\ imprimir\u00E1n\ tambi\u00E9n\ los\ datos\ del\ cliente\ de\ cada\ pedido,\ si\ es\ false\ no\r\n
comment4.params=gE
comment4.target=void\ setGestorEmpleados(GestorEmpleados)
comment4.text=\r\n\ Establece\ el\ atributo\ gestorEmpleados\ con\ el\ enviado\ por\ par\u00E1metro\r\n\ @param\ \ \ \ \ gE\ gestor\ empleados\ nuevo\r\n
comment5.params=
comment5.target=void\ anadirNuevoPedido()
comment5.text=\r\n\ A\u00F1adir\ pedido\ a\ la\ lista\ total\ de\ pedidos\r\n
comment6.params=
comment6.target=Pedido\ getNuevoPedido()
comment6.text=\r\n\ Devuelve\ el\ objeto\ en\ nuevoPedido\r\n\ @return\ \ \ \ \ \ el\ pedido\ que\ se\ est\u00E1\ creando\r\n
comment7.params=c
comment7.target=void\ crearNuevoPedido(Cliente)
comment7.text=\r\n\ Crea\ un\ nuevo\ pedido\ y\ lo\ pone\ en\ el\ campo\ nuevoPedido,\ con\ el\ cliente\ pasado\ por\ par\u00E1metro\r\n\ @param\ \ \ \ \ c\ cliente\ que\ hace\ el\ pedido\r\n
comment8.params=
comment8.target=void\ crearNuevoPedidoClienteConectado()
comment8.text=\r\n\ Crea\ un\ nuevo\ pedido\ con\ el\ cliente\ conectado\ del\ gestorClientes\ como\ cliente\r\n
comment9.params=
comment9.target=int\ getNumeroMueblesPedidoNuevo()
comment9.text=\r\n\ Devuelve\ el\ numero\ de\ muebles\ que\ tiene\ el\ pedido\ nuevoPedido\r\n\ @return\ \ \ \ \ \ int\ con\ el\ n\u00FAmero\ de\ muebles\ de\ nuevoPedido\r\n
numComments=35
