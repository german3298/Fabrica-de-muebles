#BlueJ class context
comment0.target=GestorPersonal
comment0.text=\r\n\ Clase\ que\ crea\ cualquier\ persona\ de\ la\ f\u00E1brica,\ leyendo\ todos\ los\ datos\ necesarios.\ \r\n\ Tambi\u00E9n\ se\ usa\ para\ iniciar\ sesi\u00F3n\ seg\u00FAn\ el\ ID\ de\ la\ persona\ que\ entre\ al\ sistema.\r\n\ \r\n\ \r\n\ @author\ Germ\u00E1n\ Rodr\u00EDguez\ D\u00EDez\r\n\ @version\ 0.1\r\n
comment1.params=gE\ gC\ a
comment1.target=GestorPersonal(GestorEmpleados,\ GestorClientes,\ Analizador)
comment1.text=\r\n\ Construye\ un\ gestor\ de\ personal\ con\ los\ tres\ atributos\ asignados\ y\ la\ lista\ de\ personas\ vac\u00EDa\r\n
comment10.params=
comment10.target=TipoPersona\ tipoPersonaConectada()
comment10.text=\r\n\ Devuelve\ el\ tipo\ de\ persona\ de\ la\ persona\ conectada\r\n\ @return\ \ \ \ el\ tipo\ de\ persona,\ del\ enum\ TipoPersona\r\n
comment11.params=
comment11.target=void\ modificarPersonaConectada()
comment11.text=\r\n\ Modifica\ la\ persona\ conectada,\ si\ es\ un\ empleado\ modifica\ el\ sueldo,\ y\ si\ es\ un\ cliente\ modifica\ su\ domicilio\r\n
comment12.params=tipoPersona
comment12.target=boolean\ isEmpleado(TipoPersona)
comment12.text=\r\n\ Comprueba\ si\ el\ tipoPersona\ indicado\ es\ un\ empleado\ o\ un\ cliente\r\n\ @param\ \ \ \ \ tipoPersona\ del\ enum\ tipoPersona\r\n\ @return\ \ \ \ true\ si\ es\ un\ empleado,\ false\ si\ no\r\n
comment13.params=p
comment13.target=void\ anadirPersona(Persona)
comment13.text=\r\n\ A\u00F1ade\ una\ persona\ indicada\ por\ par\u00E1metro\ al\ hashmap\ de\ personal,\ poniendo\ su\ ID\ como\ clave\r\n\ @param\ \ p\ \ persona\ a\ a\u00F1adir\ en\ el\ hashmap\r\n
comment14.params=ID\ sueldo\ incentivoJefe
comment14.target=Persona\ crearJefe(java.lang.String,\ int,\ int)
comment14.text=\r\n\ Crea\ un\ jefe,\ devuelto\ del\ gestorEmpleados\r\n\ @return\ \ \ \ \ la\ persona\ creada\ con\ los\ atributos\ indicados\r\n
comment15.params=ID\ sueldo\ cocheEmpresa
comment15.target=Persona\ crearComercial(java.lang.String,\ int,\ boolean)
comment15.text=\r\n\ Crea\ un\ comercial,\ devuelto\ del\ gestorEmpleados\r\n\ @return\ \ \ \ \ la\ persona\ creada\ con\ los\ atributos\ indicados\r\n
comment16.params=ID\ sueldo\ numeroTaller
comment16.target=Persona\ crearArtesanoEnPlantilla(java.lang.String,\ int,\ int)
comment16.text=\r\n\ Crea\ un\ artesano\ en\ plantilla,\ devuelto\ del\ gestorEmpleados\r\n\ @return\ \ \ \ \ la\ persona\ creada\ con\ los\ atributos\ indicados\r\n
comment17.params=ID\ sueldo\ horasSemanales
comment17.target=Persona\ crearArtesanoPorHoras(java.lang.String,\ int,\ int)
comment17.text=\r\n\ Crea\ un\ artesano\ por\ horas,\ devuelto\ del\ gestorEmpleados\r\n\ @return\ \ \ \ \ la\ persona\ creada\ con\ los\ atributos\ indicados\r\n
comment18.params=ID\ domicilio\ apellidos
comment18.target=Persona\ crearClienteParticular(java.lang.String,\ java.lang.String,\ java.lang.String)
comment18.text=\r\n\ Crea\ un\ cliente\ particular,\ devuelto\ del\ gestorClientes\r\n\ @return\ \ \ \ \ la\ persona\ creada\ con\ los\ atributos\ indicados\r\n
comment19.params=ID\ domicilio\ sociedadMercantil
comment19.target=Persona\ crearClienteEmpresa(java.lang.String,\ java.lang.String,\ java.lang.String)
comment19.text=\r\n\ Crea\ un\ cliente\ empresa,\ devuelto\ del\ gestorClientes\r\n\ @return\ \ \ \ \ la\ persona\ creada\ con\ los\ atributos\ indicados\r\n
comment2.params=gE
comment2.target=void\ setGestorEmpleados(GestorEmpleados)
comment2.text=\r\n\ Establece\ el\ atributo\ gestorEmpleados\ con\ el\ enviado\ por\ par\u00E1metro\r\n\ @param\ \ \ \ \ gE\ gestor\ empleados\ nuevo\r\n
comment20.params=tipoPersonaCreada
comment20.target=void\ crearPersona(TipoPersona)
comment20.text=\r\n\ Crea\ una\ persona\ (dependiendo\ del\ tipo\ indicado),\ leyendo\ del\ teclado\ todos\ los\ datos,\r\n\ que\ va\ pidiendo\ uno\ a\ uno,\ y\ si\ el\ ID\ introducido\ ya\ existe,\ para\ el\ proceso.\ Al\ final\ a\u00F1ade\ esta\ persona\ a\ la\ lista\r\n\ @param\ \ \ \ tipoPersonaCreada\ Tipo\ de\ la\ persona\ a\ crear\r\n
comment21.params=
comment21.target=int\ leerSueldo()
comment22.params=
comment22.target=java.lang.String\ leerDomicilio()
comment23.params=
comment23.target=int\ leerIncentivoJefe()
comment24.params=
comment24.target=boolean\ leerCocheEmpresa()
comment25.params=
comment25.target=int\ leerNumeroTaller()
comment26.params=
comment26.target=int\ leerNumeroHoras()
comment27.params=
comment27.target=java.lang.String\ leerApellidos()
comment28.params=
comment28.target=java.lang.String\ leerSociedadMercantil()
comment3.params=gC
comment3.target=void\ setGestorClientes(GestorClientes)
comment3.text=\r\n\ Establece\ el\ atributo\ gestorClientes\ con\ el\ enviado\ por\ par\u00E1metro\r\n\ @param\ \ \ \ \ gC\ gestor\ clientes\ nuevo\r\n
comment4.params=a
comment4.target=void\ setAnalizador(Analizador)
comment4.text=\r\n\ Establece\ el\ atributo\ analizador\ con\ el\ enviado\ por\ par\u00E1metro\r\n\ @param\ \ \ \ \ a\ analizador\ nuevo\r\n
comment5.params=ID
comment5.target=boolean\ existeID(java.lang.String)
comment5.text=\r\n\ Comprueba\ si\ el\ ID\ pasado\ por\ par\u00E1metro\ existe\ como\ clave\ en\ el\ hashmap\ de\ personas\r\n\ @param\ \ \ \ \ ID\ String\ que\ comprueba\ si\ existe\ en\ el\ hashmap\r\n\ @return\ \ \ \ true\ si\ existe,\ false\ si\ no\r\n
comment6.params=ID
comment6.target=boolean\ iniciarSesion(java.lang.String)
comment6.text=\r\n\ Comprueba\ si\ el\ ID\ pasado\ por\ String\ existe\ en\ el\ hashmap\ y\ luego\ si\ esa\ persona\ est\u00E1\ de\ baja,\ \r\n\ y\ sino\ lo\ est\u00E1,\ inicia\ la\ sesi\u00F3n,\ asignando\ la\ persona\ correcta\ dando\ el\ ID\ como\ clave\ al\ hashmap\r\n\ @param\ \ \ \ \ ID\ String\ para\ intentar\ iniciar\ sesi\u00F3n\r\n\ @return\ \ \ \ true\ si\ ha\ podido\ iniciar\ sesi\u00F3n,\ false\ si\ no\r\n
comment7.params=
comment7.target=void\ menuBienvenida()
comment7.text=\r\n\ Men\u00FA\ de\ bienvenida\ cuando\ se\ inicia\ sesi\u00F3n,\ que\ muestra\ el\ tipo\ de\ persona\ que\ es\ y\ sus\ datos\ personales\r\n
comment8.params=
comment8.target=void\ darDeBajaPersonaConectada()
comment8.text=\r\n\ Da\ de\ baja\ a\ la\ persona\ conectada\r\n
comment9.params=
comment9.target=void\ setPersonasConectadas()
comment9.text=\r\n\ \ Establece,\ si\ es\ necesario\ seg\u00FAn\ el\ tipo\ de\ persona,\ el\ artesano\ conectado,\ el\ empleado\ conectado\ o\ el\ cliente\ conectado\r\n\ \ En\ caso\ de\ ser\ el\ artesano,\ tambi\u00E9n\ se\ establece\ el\ empleado,\ puesto\ que\ un\ artesano\ es\ un\ empleado\r\n
numComments=29
